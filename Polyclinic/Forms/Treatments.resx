<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="idDocrors.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="idPatients.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="idDoctors.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="dateTreatment.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="diagnosis.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="price.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Patients.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="doctors.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        BoPBYFaz/wd4hdkMpfQEsAAAAABJRU5ErkJggg==
</value>
  </data>
</root>